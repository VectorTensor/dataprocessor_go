// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: dataprocessor.proto

package codegen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDBSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tablename     string                 `protobuf:"bytes,1,opt,name=tablename,proto3" json:"tablename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDBSchemaRequest) Reset() {
	*x = GetDBSchemaRequest{}
	mi := &file_dataprocessor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDBSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBSchemaRequest) ProtoMessage() {}

func (x *GetDBSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataprocessor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetDBSchemaRequest) Descriptor() ([]byte, []int) {
	return file_dataprocessor_proto_rawDescGZIP(), []int{0}
}

func (x *GetDBSchemaRequest) GetTablename() string {
	if x != nil {
		return x.Tablename
	}
	return ""
}

type GetDBSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Columns       []*ColumnInfo          `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDBSchemaResponse) Reset() {
	*x = GetDBSchemaResponse{}
	mi := &file_dataprocessor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDBSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBSchemaResponse) ProtoMessage() {}

func (x *GetDBSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataprocessor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetDBSchemaResponse) Descriptor() ([]byte, []int) {
	return file_dataprocessor_proto_rawDescGZIP(), []int{1}
}

func (x *GetDBSchemaResponse) GetColumns() []*ColumnInfo {
	if x != nil {
		return x.Columns
	}
	return nil
}

type ColumnInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColumnName    string                 `protobuf:"bytes,1,opt,name=columnName,proto3" json:"columnName,omitempty"`
	DataType      string                 `protobuf:"bytes,2,opt,name=DataType,proto3" json:"DataType,omitempty"`
	IsNullable    string                 `protobuf:"bytes,3,opt,name=IsNullable,proto3" json:"IsNullable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnInfo) Reset() {
	*x = ColumnInfo{}
	mi := &file_dataprocessor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnInfo) ProtoMessage() {}

func (x *ColumnInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dataprocessor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnInfo.ProtoReflect.Descriptor instead.
func (*ColumnInfo) Descriptor() ([]byte, []int) {
	return file_dataprocessor_proto_rawDescGZIP(), []int{2}
}

func (x *ColumnInfo) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ColumnInfo) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *ColumnInfo) GetIsNullable() string {
	if x != nil {
		return x.IsNullable
	}
	return ""
}

type HelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloRequest) Reset() {
	*x = HelloRequest{}
	mi := &file_dataprocessor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloRequest) ProtoMessage() {}

func (x *HelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataprocessor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloRequest.ProtoReflect.Descriptor instead.
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return file_dataprocessor_proto_rawDescGZIP(), []int{3}
}

func (x *HelloRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_dataprocessor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_dataprocessor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_dataprocessor_proto_rawDescGZIP(), []int{4}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_dataprocessor_proto protoreflect.FileDescriptor

const file_dataprocessor_proto_rawDesc = "" +
	"\n" +
	"\x13dataprocessor.proto\x12\rdataprocessor\"2\n" +
	"\x12GetDBSchemaRequest\x12\x1c\n" +
	"\ttablename\x18\x01 \x01(\tR\ttablename\"J\n" +
	"\x13GetDBSchemaResponse\x123\n" +
	"\acolumns\x18\x01 \x03(\v2\x19.dataprocessor.ColumnInfoR\acolumns\"h\n" +
	"\n" +
	"ColumnInfo\x12\x1e\n" +
	"\n" +
	"columnName\x18\x01 \x01(\tR\n" +
	"columnName\x12\x1a\n" +
	"\bDataType\x18\x02 \x01(\tR\bDataType\x12\x1e\n" +
	"\n" +
	"IsNullable\x18\x03 \x01(\tR\n" +
	"IsNullable\"\"\n" +
	"\fHelloRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"&\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xad\x01\n" +
	"\rDataprocessor\x12D\n" +
	"\bSayHello\x12\x1b.dataprocessor.HelloRequest\x1a\x19.dataprocessor.HelloReply\"\x00\x12V\n" +
	"\vGetDBSchema\x12!.dataprocessor.GetDBSchemaRequest\x1a\".dataprocessor.GetDBSchemaResponse\"\x00B\n" +
	"Z\bcodegen/b\x06proto3"

var (
	file_dataprocessor_proto_rawDescOnce sync.Once
	file_dataprocessor_proto_rawDescData []byte
)

func file_dataprocessor_proto_rawDescGZIP() []byte {
	file_dataprocessor_proto_rawDescOnce.Do(func() {
		file_dataprocessor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dataprocessor_proto_rawDesc), len(file_dataprocessor_proto_rawDesc)))
	})
	return file_dataprocessor_proto_rawDescData
}

var file_dataprocessor_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dataprocessor_proto_goTypes = []any{
	(*GetDBSchemaRequest)(nil),  // 0: dataprocessor.GetDBSchemaRequest
	(*GetDBSchemaResponse)(nil), // 1: dataprocessor.GetDBSchemaResponse
	(*ColumnInfo)(nil),          // 2: dataprocessor.ColumnInfo
	(*HelloRequest)(nil),        // 3: dataprocessor.HelloRequest
	(*HelloReply)(nil),          // 4: dataprocessor.HelloReply
}
var file_dataprocessor_proto_depIdxs = []int32{
	2, // 0: dataprocessor.GetDBSchemaResponse.columns:type_name -> dataprocessor.ColumnInfo
	3, // 1: dataprocessor.Dataprocessor.SayHello:input_type -> dataprocessor.HelloRequest
	0, // 2: dataprocessor.Dataprocessor.GetDBSchema:input_type -> dataprocessor.GetDBSchemaRequest
	4, // 3: dataprocessor.Dataprocessor.SayHello:output_type -> dataprocessor.HelloReply
	1, // 4: dataprocessor.Dataprocessor.GetDBSchema:output_type -> dataprocessor.GetDBSchemaResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dataprocessor_proto_init() }
func file_dataprocessor_proto_init() {
	if File_dataprocessor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dataprocessor_proto_rawDesc), len(file_dataprocessor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataprocessor_proto_goTypes,
		DependencyIndexes: file_dataprocessor_proto_depIdxs,
		MessageInfos:      file_dataprocessor_proto_msgTypes,
	}.Build()
	File_dataprocessor_proto = out.File
	file_dataprocessor_proto_goTypes = nil
	file_dataprocessor_proto_depIdxs = nil
}
